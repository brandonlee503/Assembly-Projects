Microsoft (R) Macro Assembler Version 10.00.30319.01	    04/19/15 21:42:58
 Assignment 2     (Project02.asm			     Page 1 - 1


				TITLE Assignment 2     (Project02.asm)

				; Name: Brandon Lee
				; Email: leebran@onid.oregonstate.edu
				; Class: CS271 Section 400
				; Assignment: #2
				; Due Date: 4/19/15

				; Description: The second homework assignment - string input, loops, previous values, data validation.
				; **EC: A poem.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				;Constants
 = 00000001				LOWER = 1
 = 0000002E				UPPER = 46

 00000000			.data
 00000000  00000021 [			userName		BYTE		33 DUP(0)								;String to be entered by user
	    00
	   ]
 00000021 00000000			fibInput		DWORD		?										;Fib to be entered by user
 00000025 54 49 54 4C 45		intro			BYTE		"TITLE: Assignment 2 - Brandon Lee",0
	   3A 20 41 73 73
	   69 67 6E 6D 65
	   6E 74 20 32 20
	   2D 20 42 72 61
	   6E 64 6F 6E 20
	   4C 65 65 00
 00000047 57 68 61 74 20		namePrompt		BYTE		"What is your name: ",0
	   69 73 20 79 6F
	   75 72 20 6E 61
	   6D 65 3A 20 00
 0000005B 48 69 20 00			greeting		BYTE		"Hi ",0
 0000005F 47 6F 6F 64 62		byeMessage		BYTE		"Goodbye ",0
	   79 65 20 00
 00000068 20 20 20 20 20		space			BYTE		"     ",0
	   00
 0000006E 48 6F 77 20 6D		fibPrompt		BYTE		"How many Fibonacci terms do you wish to display? (1-46):",0
	   61 6E 79 20 46
	   69 62 6F 6E 61
	   63 63 69 20 74
	   65 72 6D 73 20
	   64 6F 20 79 6F
	   75 20 77 69 73
	   68 20 74 6F 20
	   64 69 73 70 6C
	   61 79 3F 20 28
	   31 2D 34 36 29
	   3A 00
 000000A7 00000001			initFib			DWORD		1										;Initial fib value
 000000AB FFFFFFFF			initPrev		DWORD		-1										;Previous value to add for fib

 000000AF 4D 79 20 49 4E		extraCredit		BYTE		"My INCREDIBLE Extra Credit, a poem for our instructor: ",0
	   43 52 45 44 49
	   42 4C 45 20 45
	   78 74 72 61 20
	   43 72 65 64 69
	   74 2C 20 61 20
	   70 6F 65 6D 20
	   66 6F 72 20 6F
	   75 72 20 69 6E
	   73 74 72 75 63
	   74 6F 72 3A 20
	   00
 000000E7 53 74 65 70 68		extraCredit1	BYTE		"Stephen Redfield, Steven Redfield",0
	   65 6E 20 52 65
	   64 66 69 65 6C
	   64 2C 20 53 74
	   65 76 65 6E 20
	   52 65 64 66 69
	   65 6C 64 00
 00000109 48 65 20 69 73		extraCredit2	BYTE		"He is our instructor!",0
	   20 6F 75 72 20
	   69 6E 73 74 72
	   75 63 74 6F 72
	   21 00
 0000011F 53 74 65 70 68		extraCredit3	BYTE		"Stephen Redfield, Stephen Redfield",0
	   65 6E 20 52 65
	   64 66 69 65 6C
	   64 2C 20 53 74
	   65 70 68 65 6E
	   20 52 65 64 66
	   69 65 6C 64 00
 00000142 48 65 20 69 73		extraCredit4	BYTE		"He is the conductor!",0
	   20 74 68 65 20
	   63 6F 6E 64 75
	   63 74 6F 72 21
	   00
 00000157 53 74 65 70 68		extraCredit5	BYTE		"Stephen lives in Salem and commutes to Corvallis for work.",0
	   65 6E 20 6C 69
	   76 65 73 20 69
	   6E 20 53 61 6C
	   65 6D 20 61 6E
	   64 20 63 6F 6D
	   6D 75 74 65 73
	   20 74 6F 20 43
	   6F 72 76 61 6C
	   6C 69 73 20 66
	   6F 72 20 77 6F
	   72 6B 2E 00
 00000192 48 65 20 67 69		extraCredit6	BYTE		"He gives us these assignments that make us struggle and jerk..",0
	   76 65 73 20 75
	   73 20 74 68 65
	   73 65 20 61 73
	   73 69 67 6E 6D
	   65 6E 74 73 20
	   74 68 61 74 20
	   6D 61 6B 65 20
	   75 73 20 73 74
	   72 75 67 67 6C
	   65 20 61 6E 64
	   20 6A 65 72 6B
	   2E 2E 00
 000001D1 48 69 73 20 62		extraCredit7	BYTE		"His background includes a BS and Masters,",0
	   61 63 6B 67 72
	   6F 75 6E 64 20
	   69 6E 63 6C 75
	   64 65 73 20 61
	   20 42 53 20 61
	   6E 64 20 4D 61
	   73 74 65 72 73
	   2C 00
 000001FB 48 65 20 69 73		extraCredit8	BYTE		"He is on his Ph.D. which hopefully won’t end up in disaster..",0
	   20 6F 6E 20 68
	   69 73 20 50 68
	   2E 44 2E 20 77
	   68 69 63 68 20
	   68 6F 70 65 66
	   75 6C 6C 79 20
	   77 6F 6E 92 74
	   20 65 6E 64 20
	   75 70 20 69 6E
	   20 64 69 73 61
	   73 74 65 72 2E
	   2E 00
 00000239 53 74 65 76 65		extraCredit9	BYTE		"Steven chose Computer Engineering because he likes software and circuits,",0
	   6E 20 63 68 6F
	   73 65 20 43 6F
	   6D 70 75 74 65
	   72 20 45 6E 67
	   69 6E 65 65 72
	   69 6E 67 20 62
	   65 63 61 75 73
	   65 20 68 65 20
	   6C 69 6B 65 73
	   20 73 6F 66 74
	   77 61 72 65 20
	   61 6E 64 20 63
	   69 72 63 75 69
	   74 73 2C 00
 00000283 48 69 73 20 73		extraCredit10	BYTE		"His specialties are hybrid, jack of all trades, all-purpose!",0
	   70 65 63 69 61
	   6C 74 69 65 73
	   20 61 72 65 20
	   68 79 62 72 69
	   64 2C 20 6A 61
	   63 6B 20 6F 66
	   20 61 6C 6C 20
	   74 72 61 64 65
	   73 2C 20 61 6C
	   6C 2D 70 75 72
	   70 6F 73 65 21
	   00
 000002C0 48 65 20 6D 61		extraCredit11	BYTE		"He made a scanner in high school using an old typewriter,",0
	   64 65 20 61 20
	   73 63 61 6E 6E
	   65 72 20 69 6E
	   20 68 69 67 68
	   20 73 63 68 6F
	   6F 6C 20 75 73
	   69 6E 67 20 61
	   6E 20 6F 6C 64
	   20 74 79 70 65
	   77 72 69 74 65
	   72 2C 00
 000002FA 50 68 6F 74 6F		extraCredit12	BYTE		"Photo-sensitive resistors, LED/BASIC microprocessor kit, what a fighter!",0
	   2D 73 65 6E 73
	   69 74 69 76 65
	   20 72 65 73 69
	   73 74 6F 72 73
	   2C 20 4C 45 44
	   2F 42 41 53 49
	   43 20 6D 69 63
	   72 6F 70 72 6F
	   63 65 73 73 6F
	   72 20 6B 69 74
	   2C 20 77 68 61
	   74 20 61 20 66
	   69 67 68 74 65
	   72 21 00
 00000343 53 74 65 70 68		extraCredit13	BYTE		"Stephen has a daughter, dog, and cat,",0
	   65 6E 20 68 61
	   73 20 61 20 64
	   61 75 67 68 74
	   65 72 2C 20 64
	   6F 67 2C 20 61
	   6E 64 20 63 61
	   74 2C 00
 00000369 54 77 6F 2C 20		extraCredit14	BYTE		"Two, eight, and eight years old.",0
	   65 69 67 68 74
	   2C 20 61 6E 64
	   20 65 69 67 68
	   74 20 79 65 61
	   72 73 20 6F 6C
	   64 2E 00
 0000038A 48 65 20 69 73		extraCredit15	BYTE		"He is currently building a backyard shed,",0
	   20 63 75 72 72
	   65 6E 74 6C 79
	   20 62 75 69 6C
	   64 69 6E 67 20
	   61 20 62 61 63
	   6B 79 61 72 64
	   20 73 68 65 64
	   2C 00
 000003B4 57 6F 77 20 73		extraCredit16	BYTE		"Wow so bold!",0
	   6F 20 62 6F 6C
	   64 21 00
							

 00000000			.code
 00000000			main PROC
				;Intro (Introduction)
 00000000  BA 00000025 R		mov		edx, OFFSET intro
 00000005  E8 00000000 E		call	WriteString
 0000000A  E8 00000000 E		call	CrLf

				;Get user's name
 0000000F  BA 00000047 R		mov		edx, OFFSET namePrompt
 00000014  E8 00000000 E		call	WriteString
 00000019  BA 00000000 R		mov		edx, OFFSET UserName
 0000001E  B9 00000020			mov		ecx, 32
 00000023  E8 00000000 E		call	ReadString

				;Greet user
 00000028  BA 0000005B R		mov		edx, OFFSET greeting
 0000002D  E8 00000000 E		call	WriteString
 00000032  BA 00000000 R		mov		edx, OFFSET userName
 00000037  E8 00000000 E		call	WriteString
 0000003C  E8 00000000 E		call	CrLf
					
				;Prompt user for # of Fibonacci terms (1-46) - (userInstructions)
 00000041			check1:
 00000041  BA 0000006E R		mov		edx, OFFSET fibPrompt
 00000046  E8 00000000 E		call	WriteString
 0000004B  E8 00000000 E		call	ReadInt							 ; (getUserData)
 00000050  A3 00000021 R		mov		fibInput, eax

				;Validate user input
 00000055  83 3D 00000021 R		cmp		fibInput, LOWER
	   01
 0000005C  7C E3			jl		check1
 0000005E  83 3D 00000021 R		cmp		fibInput, UPPER
	   2E
 00000065  7F DA			jg		check1
 00000067  8B 0D 00000021 R		mov		ecx, fibInput
 0000006D  83 C1 01			add		ecx, 1

				;Calculate Fibonacci numbers (displayFibs)
 00000070			Label1:

				;Set initialized variables and print to screen
 00000070  A1 000000A7 R		mov		eax, initFib
 00000075  03 05 000000AB R		add		eax, initPrev
 0000007B  83 F8 00			cmp		eax,0
 0000007E  74 05			je		Zerofix
 00000080  E8 00000000 E		call	WriteDec

 00000085			Zerofix:
 00000085  A3 000000A7 R		mov		initFib, eax
 0000008A  2B 05 000000AB R		sub		eax, initPrev
 00000090  A3 000000AB R		mov		initPrev, eax

				;Check if new line needed or spaces
 00000095  BA 00000000			mov		edx, 0
 0000009A  8B C1			mov		eax, ecx
 0000009C  BB 00000005			mov		ebx, 5
 000000A1  F7 F3			div		ebx
 000000A3  83 FA 00			cmp		edx, 0
 000000A6  74 02			je		NewLine
 000000A8  75 0F			jne		Spaces

 000000AA			NewLine:
 000000AA  3B 0D 00000021 R		cmp		ecx, fibInput
 000000B0  74 07			je		Spaces
 000000B2  E8 00000000 E		call	CrLf
 000000B7  EB 0C			jmp		Label2

 000000B9			Spaces:
 000000B9  BA 00000068 R		mov		edx, OFFSET space
 000000BE  E8 00000000 E		call	WriteString
 000000C3  EB 00			jmp		Label2

 000000C5			Label2:
 000000C5  E2 A9			loop	Label1

				;Say goodbye to user (farewell)
 000000C7  E8 00000000 E		call	CrLf
 000000CC  E8 00000000 E		call	CrLf
 000000D1  BA 0000005F R		mov		edx, OFFSET byeMessage
 000000D6  E8 00000000 E		call	WriteString
 000000DB  BA 00000000 R		mov		edx, OFFSET userName
 000000E0  E8 00000000 E		call	WriteString
 000000E5  E8 00000000 E		call	CrLf

				;-------------------------
				;Extra Credit
 000000EA  E8 00000000 E		call	CrLf
 000000EF  E8 00000000 E		call	CrLf
 000000F4  BA 000000AF R		mov		edx, OFFSET extraCredit
 000000F9  E8 00000000 E		call	WriteString
 000000FE  E8 00000000 E		call	CrLf
 00000103  E8 00000000 E		call	CrLf

 00000108  BA 000000E7 R		mov		edx, OFFSET extraCredit1
 0000010D  E8 00000000 E		call	WriteString
 00000112  E8 00000000 E		call	CrLf
 00000117  BA 00000109 R		mov		edx, OFFSET extraCredit2
 0000011C  E8 00000000 E		call	WriteString
 00000121  E8 00000000 E		call	CrLf

 00000126  BA 0000011F R		mov		edx, OFFSET extraCredit3
 0000012B  E8 00000000 E		call	WriteString
 00000130  E8 00000000 E		call	CrLf
 00000135  BA 00000142 R		mov		edx, OFFSET extraCredit4
 0000013A  E8 00000000 E		call	WriteString
 0000013F  E8 00000000 E		call	CrLf
 00000144  E8 00000000 E		call	CrLf

 00000149  BA 00000157 R		mov		edx, OFFSET extraCredit5
 0000014E  E8 00000000 E		call	WriteString
 00000153  E8 00000000 E		call	CrLf
 00000158  BA 00000192 R		mov		edx, OFFSET extraCredit6
 0000015D  E8 00000000 E		call	WriteString
 00000162  E8 00000000 E		call	CrLf
 00000167  E8 00000000 E		call	CrLf

 0000016C  BA 000001D1 R		mov		edx, OFFSET extraCredit7
 00000171  E8 00000000 E		call	WriteString
 00000176  E8 00000000 E		call	CrLf
 0000017B  BA 000001FB R		mov		edx, OFFSET extraCredit8
 00000180  E8 00000000 E		call	WriteString
 00000185  E8 00000000 E		call	CrLf
 0000018A  E8 00000000 E		call	CrLf

 0000018F  BA 00000239 R		mov		edx, OFFSET extraCredit9
 00000194  E8 00000000 E		call	WriteString
 00000199  E8 00000000 E		call	CrLf
 0000019E  BA 00000283 R		mov		edx, OFFSET extraCredit10
 000001A3  E8 00000000 E		call	WriteString
 000001A8  E8 00000000 E		call	CrLf
 000001AD  E8 00000000 E		call	CrLf

 000001B2  BA 000002C0 R		mov		edx, OFFSET extraCredit11
 000001B7  E8 00000000 E		call	WriteString
 000001BC  E8 00000000 E		call	CrLf
 000001C1  BA 000002FA R		mov		edx, OFFSET extraCredit12
 000001C6  E8 00000000 E		call	WriteString
 000001CB  E8 00000000 E		call	CrLf
 000001D0  E8 00000000 E		call	CrLf

 000001D5  BA 00000343 R		mov		edx, OFFSET extraCredit13
 000001DA  E8 00000000 E		call	WriteString
 000001DF  E8 00000000 E		call	CrLf
 000001E4  BA 00000369 R		mov		edx, OFFSET extraCredit14
 000001E9  E8 00000000 E		call	WriteString
 000001EE  E8 00000000 E		call	CrLf
					
 000001F3  BA 0000038A R		mov		edx, OFFSET extraCredit15
 000001F8  E8 00000000 E		call	WriteString
 000001FD  E8 00000000 E		call	CrLf
 00000202  BA 000003B4 R		mov		edx, OFFSET extraCredit16
 00000207  E8 00000000 E		call	WriteString
 0000020C  E8 00000000 E		call	CrLf
 00000211  E8 00000000 E		call	CrLf

				;-------------------------

				; exit to operating system
					exit
 0000021D			main ENDP

				END main
Microsoft (R) Macro Assembler Version 10.00.30319.01	    04/19/15 21:42:58
 Assignment 2     (Project02.asm			     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000003C1 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000021D Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000021D Public STDCALL
  check1 . . . . . . . . . . . .	L Near	 00000041 _TEXT	
  Label1 . . . . . . . . . . . .	L Near	 00000070 _TEXT	
  Zerofix  . . . . . . . . . . .	L Near	 00000085 _TEXT	
  NewLine  . . . . . . . . . . .	L Near	 000000AA _TEXT	
  Spaces . . . . . . . . . . . .	L Near	 000000B9 _TEXT	
  Label2 . . . . . . . . . . . .	L Near	 000000C5 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LOWER  . . . . . . . . . . . . .	Number	 00000001h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
UPPER  . . . . . . . . . . . . .	Number	 0000002Eh   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
byeMessage . . . . . . . . . . .	Byte	 0000005F _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
extraCredit10  . . . . . . . . .	Byte	 00000283 _DATA	
extraCredit11  . . . . . . . . .	Byte	 000002C0 _DATA	
extraCredit12  . . . . . . . . .	Byte	 000002FA _DATA	
extraCredit13  . . . . . . . . .	Byte	 00000343 _DATA	
extraCredit14  . . . . . . . . .	Byte	 00000369 _DATA	
extraCredit15  . . . . . . . . .	Byte	 0000038A _DATA	
extraCredit16  . . . . . . . . .	Byte	 000003B4 _DATA	
extraCredit1 . . . . . . . . . .	Byte	 000000E7 _DATA	
extraCredit2 . . . . . . . . . .	Byte	 00000109 _DATA	
extraCredit3 . . . . . . . . . .	Byte	 0000011F _DATA	
extraCredit4 . . . . . . . . . .	Byte	 00000142 _DATA	
extraCredit5 . . . . . . . . . .	Byte	 00000157 _DATA	
extraCredit6 . . . . . . . . . .	Byte	 00000192 _DATA	
extraCredit7 . . . . . . . . . .	Byte	 000001D1 _DATA	
extraCredit8 . . . . . . . . . .	Byte	 000001FB _DATA	
extraCredit9 . . . . . . . . . .	Byte	 00000239 _DATA	
extraCredit  . . . . . . . . . .	Byte	 000000AF _DATA	
fibInput . . . . . . . . . . . .	DWord	 00000021 _DATA	
fibPrompt  . . . . . . . . . . .	Byte	 0000006E _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
greeting . . . . . . . . . . . .	Byte	 0000005B _DATA	
initFib  . . . . . . . . . . . .	DWord	 000000A7 _DATA	
initPrev . . . . . . . . . . . .	DWord	 000000AB _DATA	
intro  . . . . . . . . . . . . .	Byte	 00000025 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
namePrompt . . . . . . . . . . .	Byte	 00000047 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
space  . . . . . . . . . . . . .	Byte	 00000068 _DATA	
userName . . . . . . . . . . . .	Byte	 00000000 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
